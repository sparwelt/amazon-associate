// Generated by CoffeeScript 2.3.1
var EventEmitter, _, sax;

({EventEmitter} = require('events'));

_ = require('underscore');

sax = require('sax');

module.exports = class extends EventEmitter {
  constructor() {
    super();
    this.items = [];
    this.mode = 'search-item-list';
    this.parser = sax.parser(false);
    this.parser.onerror = (err) => {
      return this.emit('error', err);
    };
    this.parser.onend = () => {
      return this.emit('end', this.items);
    };
    this.parser.onopentag = ({name, attributes}) => {
      var item;
      if (this.mode === 'search-item-list' && name === 'ITEMS') {
        this.mode = 'next-item';
      }
      if (this.mode === 'next-item' && name === 'ITEM') {
        item = {};
        _.each(_.keys(attributes), function(key) {
          return item[key.toLowerCase()] = attributes[key];
        });
        return this.items.push(item);
      }
    };
  }

  write(data) {
    return this.parser.write(data);
  }

  close() {
    return this.parser.close();
  }

};
